from cgitb import text
from datetime import datetime

from aiogram import Dispatcher
from aiogram.types import Message, ContentType, CallbackQuery
from aiogram.dispatcher.filters.builtin import IsSenderContact
from aiogram.utils.deep_linking import get_start_link

from tgbot.keyboards.reply import phone, menu
from tgbot.keyboards.inline import ref_link_button
from tgbot.misc.db import db

import asyncpg

async def user_start(message: Message):
    try:
        args = message.get_args()

        await db.add_user(
            id=message.from_user.id,
            full_name=message.from_user.full_name,
            phone_number=None,
            username=message.from_user.username,
            score=5,
            joined_date=datetime.now()
        )
        if args:
            await db.update_user_score(id=int(args))

            await db.add_invited_users(
                user_offered_id=int(args),
                user_invited_id=message.from_user.id,
                created_at=datetime.now()
            )
            
            user = dict(await db.select_user(id=int(args)))
            await message.answer(f"–°–∏–∑–Ω–∏ —É—à–±—É –±–æ—Ç–≥–∞ <a href='tg://user?id={args}'>{user['full_name']}</a> —Ç–∞–∫–ª–∏—Ñ “õ–∏–ª–¥–∏!")
            await message.answer(
                "'üì≤ –†–∞“õ–∞–º–Ω–∏ —é–±–æ—Ä–∏—à' —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–≥–∞–Ω “≥–æ–ª–¥–∞ —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑–Ω–∏ —é–±–æ—Ä–∏–Ω–≥!", 
                reply_markup=phone
            )
            try:
                text = "üë§ –Ø–Ω–≥–∏ –∏—à—Ç–∏—Ä–æ–∫—á–∏ “õ—û—à–∏–ª–¥–∏\n"
                text += f"üéó –°–∏–∑–Ω–∏–Ω–≥ –±–∞–ª–∏–Ω–≥–∏–∑ {user['score']}, –∫—û–ø—Ä–æ“õ –¥—û—Å—Ç–ª–∞—Ä–∏–Ω–≥–∏–∑–Ω–∏ —Ç–∞–∫–ª–∏—Ñ —ç—Ç–∏–± –±–∞–ª–ª–∏–Ω–≥–∏–∑–Ω–∏ –æ—à–∏—Ä–∏–Ω–≥!"
                bot = message.bot
                await bot.send_message(chat_id=int(args), text=text)
            except Exception as e:
                print(e)
        else:
            await message.answer(
                "'üì≤ –†–∞“õ–∞–º–Ω–∏ —é–±–æ—Ä–∏—à' —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–≥–∞–Ω “≥–æ–ª–¥–∞ —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑–Ω–∏ —é–±–æ—Ä–∏–Ω–≥!", 
                reply_markup=phone
            )
    except:
        user = dict(await db.select_user(id=message.from_user.id))
        if user['phone_number'] is not None:
            await message.answer(
                text="“ö—É–π–∏–¥–∞–≥–∏  –º–µ–Ω—é–¥–∞–Ω –∫–µ—Ä–∞–∫–ª–∏ –±—û–ª–∏–º–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥ üëá",
                reply_markup=menu
            )
        else:
            await message.answer(
                "'üì≤ –†–∞“õ–∞–º–Ω–∏ —é–±–æ—Ä–∏—à' —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–≥–∞–Ω “≥–æ–ª–¥–∞ —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑–Ω–∏ —é–±–æ—Ä–∏–Ω–≥!", 
                reply_markup=phone
            )


async def verify_phone_number(message: Message):
    if message.contact.user_id == message.from_user.id:

        phone_number = message.contact.phone_number
        id = message.from_user.id

        await db.set_phone_number(phone_number=phone_number, id=id)

        intro = """<b>"IT Masters" “≥–∞–º–¥–∞ "Excel Hacks" “≥–∞–º–∫–æ—Ä–ª–∏–≥–∏–¥–∞ —Ç–∞—à–∫–∏–ª \
                —ç—Ç–∏–ª–≥–∞–Ω —Ç–µ—Ö–Ω–æ –∫–æ–Ω–∫—É—Ä—Å–¥–∞ –∏—à—Ç–∏—Ä–æ–∫ —ç—Ç–∏–Ω–≥ –≤–∞ “õ—É–π–∏–¥–∞–≥–∏ —Å–æ–≤—Ä–∏–Ω–ª–∞—Ä–¥–∞–Ω \
                –±–∏—Ä–∏–Ω–∏ —é—Ç–∏–± –æ–ª–∏–Ω–≥!</b>\n\n"""
        intro += "ü•á <b>1-—û—Ä–∏–Ω</b>: RGB Gaming Combo 4 in 1 (–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞, —Å–∏—á“õ–æ–Ω—á–∞, “õ—É–ª–æ“õ—á–∏–Ω–ª–∞—Ä –≤–∞ –∫–æ–≤—Ä–∏–∫)\n"
        intro += "ü•à 2-—û—Ä–∏–Ω: UzBrand –Ω–æ—É—Ç–±—É–∫ —Å—É–º–∫–∞—Å–∏ –≤–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.\n"
        intro += "ü•â 3-—û—Ä–∏–Ω: Freemotion B525 Wireless “õ—É–ª–æ“õ—á–∏–Ω–ª–∞—Ä–∏."

        sign_up = "<b>–¢–∞–±—Ä–∏–∫–ª–∞–π–º–∏–∑ ‚úÖ</b>,  –°–∏–∑ —Ä—û–π—Ö–∞—Ç–¥–∞–Ω –º—É–≤–∞—Ñ—Ñ–∞“õ–∏—è—Ç–ª–∏ —û—Ç–¥–∏–Ω–≥–∏–∑! –°–æ–≤—Ä–∏–Ω–ª–∞—Ä —Ä—û–π—Ö–∞—Ç–∏ —é“õ–æ—Ä–∏–¥–∞–≥–∏ –ø–æ—Å—Ç–¥–∞ üëÜ\n\n"
        sign_up += "<b>“ö—É–π–∏–¥–∞–≥–∏ ¬´–¢–∞–Ω–ª–æ–≤–¥–∞ –∏—à—Ç–∏—Ä–æ–∫ —ç—Ç–∏—à¬ª –±—û–ª–∏–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥ üëá üëá</b>"
        await message.answer(text=intro, reply_markup=menu)
        await message.answer(text=sign_up)
    else:
        await message.answer("–ò–ª—Ç–∏–º–æ—Å, 'üì≤ –†–∞“õ–∞–º–Ω–∏ —é–±–æ—Ä–∏—à' —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–≥–∞–Ω “≥–æ–ª–¥–∞ —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑–Ω–∏ —é–±–æ—Ä–∏–Ω–≥!", reply_markup=phone)


async def join_comp(message: Message):
    text = "–ë–∞–ª–ª —Ç—û–ø–ª–∞—à —É—á—É–Ω —Å–∏–∑–≥–∞ –±–µ—Ä–∏–ª–∞–¥–∏–≥–∞–Ω —Ä–µ—Ñ–µ—Ä–∞–ª (–º–∞—Ö—Å—É—Å) –ª–∏–Ω–∫ –æ—Ä“õ–∞–ª–∏ –æ–¥–∞–º —Ç–∞–∫–ª–∏—Ñ “õ–∏–ª–∏—à–∏–Ω–≥–∏–∑ –∫–µ—Ä–∞–∫ –±—û–ª–∞–¥–∏."
    text+= "–¢–∞–∫–ª–∏—Ñ —ç—Ç–∏–ª–≥–∞–Ω “≥–∞—Ä –±–∏—Ä –æ–¥–∞–º —É—á—É–Ω <b>5 –±–∞–ª–ª</b> –±–µ—Ä–∏–ª–∞–¥–∏"

    await message.answer(text=text, reply_markup=ref_link_button)


async def generate_depp_link(call: CallbackQuery):
    text = "<b>–≠–Ω–≥ —Å–∞—Ä–∞ 10 —Ç–∞ —Å–æ–≤—Ä–∏–Ω–ª–∞—Ä–¥–∞–Ω –±–∏—Ä–∏–Ω–∏ —é—Ç–∏–± –æ–ª–∏—à–Ω–∏ –∏—Å—Ç–∞–π—Å–∏–∑–º–∏?"
    text += "–£–Ω–¥–∞ ¬´IT Masters¬ª “≥–∞–º–¥–∞ ¬´Excel Hacks¬ª “≥–∞–º–∫–æ—Ä–ª–∏–≥–∏–¥–∞ —Ç–∞—à–∫–∏–ª —ç—Ç–∏–ª–≥–∞–Ω —Ç–∞–Ω–ª–æ–≤–¥–∞ “õ–∞—Ç–Ω–∞—à–∏–±, –æ–º–∞–¥–∏–Ω–≥–∏–∑–Ω–∏ —Å–∏–Ω–∞–± –∫—û—Ä–∏–Ω–≥!\n\n"
    text += "–¢–∞–Ω–ª–æ–≤–¥–∞ –∏—à—Ç–∏—Ä–æ–∫ —ç—Ç–∏—à —É—á—É–Ω üëá</b>"
    link = await get_start_link(call.from_user.id)
    text += link

    msg =  await call.message.answer(text=text)
    await msg.reply("üëÜ –Æ“õ–æ—Ä–∏–¥–∞–≥–∏ —Å–∏–∑–Ω–∏–Ω–≥ —Ä–µ—Ñ–µ—Ä–∞–ª –ª–∏–Ω–∫/“≥–∞–≤–æ–ª–∞–Ω–≥–∏–∑. –£–Ω–∏ –∫—û–ø—Ä–æ“õ —Ç–∞–Ω–∏—à–ª–∞—Ä–∏–Ω–≥–∏–∑–≥–∞ —É–ª–∞—à–∏–Ω–≥. –û–º–∞–¥!")


async def terms_and_policy(message: Message):
    text = "<b>–¢–ê–ù–õ–û–í –®–ê–†–¢–õ–ê–†–ò:</b>\n\n"
    text += "‚ùóÔ∏è–£—à–±—É —Ç–∞–Ω–ª–æ–≤–¥–∞ 10—Ç–∞ “ì–æ–ª–∏–±–ª–∞—Ä —Ç—û–ø–ª–∞–≥–∞–Ω –±–∞–ª–ª–∞—Ä–∏–≥–∞ “õ–∞—Ä–∞–± –∞–Ω–∏“õ–ª–∞–Ω–∞–¥–∏.\n\n"
    text += "<b>–ë–∞–ª–ª–∞—Ä “õ–∞–Ω–¥–∞–π —Ç—û–ø–ª–∞–Ω–∞–¥–∏?</b>\n\n"
    text += """–ë–û–¢–¥–∞ –∫–µ–ª—Ç–∏—Ä–∏–ª–≥–∞–Ω 2 —Ç–∞ –∫–∞–Ω–∞–ª–≥–∞ –æ–±—É–Ω–∞ –±—û–ª–≥–∞—á, "–ê—ä–∑–æ –±—û–ª–¥–∏–º" —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–∏—à–∏–Ω–≥–∏–∑ –±–∏–ª–∞–Ω, —Å–∏–∑–≥–∞ –º–∞—Ö—Å—É—Å —Ä–µ—Ñ–µ—Ä–∞–ª –ª–∏–Ω–∫ (“≥–∞–≤–æ–ª–∞) –±–µ—Ä–∏–ª–∞–¥–∏.\
–é—à–∞ –ª–∏–Ω–∫ –æ—Ä“õ–∞–ª–∏ –æ–±—É–Ω–∞ –±—û–ª–≥–∞–Ω “≥–∞—Ä –±–∏—Ä –∏–Ω—Å–æ–Ω —É—á—É–Ω —Å–∏–∑–≥–∞ 5 –±–∞–ª–ª–¥–∞–Ω –±–µ—Ä–∏–± –±–æ—Ä–∏–ª–∞–¥–∏. \
“ö–∞–Ω—á–∞ –∫—û–ø –±–∞–ª–ª –π–∏“ì—Å–∞–Ω–≥–∏–∑, “ì–æ–ª–∏–± –±—û–ª–∏—à –∏–º–∫–æ–Ω–∏—è—Ç–∏–Ω–≥–∏–∑ —à—É–Ω—á–∞ –æ—Ä—Ç–∏–± –±–æ—Ä–∞–¥–∏.\n\n"""
    text += "‚åõÔ∏è <i>–¢–∞–Ω–ª–æ–≤ 31 –æ–∫—Ç—è–±—Ä—å –∫—É–Ω–∏ 23:59–¥–∞ —è–∫—É–Ω–ª–∞–Ω–∞–¥–∏.\n\n</i>"
    text += "<b>‚ùóÔ∏è–î–∏“õ“õ–∞—Ç! –°—É–Ω—ä–∏–π (—û–ª–∏–∫ –∞–∫–∫–∞—É–Ω—Ç–ª–∞—Ä “õ—û—à–≥–∞–Ω) –Ω–∞–∫—Ä—É—Ç–∫–∞ –≤–∞ —Ö.–∫. –ª–∞—Ä–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–≥–∞–Ω–ª–∞—Ä —Ç–∞–Ω–ª–æ–≤–¥–∞–Ω —á–µ—Ç–ª–∞—à—Ç–∏—Ä–∏–ª–∞–¥–∏!</b>"

    await message.answer(text=text)


async def get_all_users(message: Message):
    current_user = dict(await db.select_user(id=message.from_user.id))
    users_record = list(await db.select_all_users())
    users = [dict(user) for user in users_record][:20]

    text = "<b>üìä –ë–æ—Ç–∏–º–∏–∑–≥–∞ —ç–Ω–≥ –∫—û–ø –¥—û—Å—Ç–∏–Ω–∏ —Ç–∞–∫–ª–∏—Ñ “õ–∏–ª–∏–± –±–∞–ª–ª —Ç—û–ø–ª–∞–≥–∞–Ω–ª–∞—Ä —Ä—û–π“≥–∞—Ç–∏:</b>\n\n"
    place = 1
    for user in users:
        text += f"üèÖ <b>{place}-—û—Ä–∏–Ω: {user['full_name']} ‚Ä¢ {user['score']} –±–∞–ª–ª</b>\n"
        place += 1

    text += f"\n‚úÖ <b>–°–∏–∑–¥–∞ {current_user['score']} –±–∞–ª–ª</b>.  –ö—û–ø—Ä–æ“õ –¥—û—Å—Ç–ª–∞—Ä–∏–Ω–≥–∏–∑–Ω–∏ —Ç–∞–∫–ª–∏—Ñ —ç—Ç–∏–± –±–∞–ª–ª–∏–Ω–≥–∏–∑–Ω–∏ –æ—à–∏—Ä–∏–Ω–≥!"

    await message.answer(text=text)


def register_user(dp: Dispatcher):
    dp.register_message_handler(user_start, commands=["start"], state="*")
    dp.register_message_handler(verify_phone_number, content_types=ContentType.CONTACT)
    dp.register_message_handler(join_comp, text="üéÅ –¢–ê–ù–õ–û–í–î–ê –ò–®–¢–ò–†–û–ö –≠–¢–ò–®")
    dp.register_callback_query_handler(generate_depp_link, text="join")
    dp.register_message_handler(terms_and_policy, text="üìù –®–∞—Ä—Ç–ª–∞—Ä")
    dp.register_message_handler(get_all_users, text="üìä –†–µ–π—Ç–∏–Ω–≥")